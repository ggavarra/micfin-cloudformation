Description: >
  This template deploys the micfin application.

Parameters:
  EnvironmentName:
    Type: String
    Description: Environment name that joins all the stacks
    
  AppMeshMeshName:
    Type: String
    Description: Name of mesh
    Default: default
    
  ECSServicesDomain:
    Type: String
    Description: DNS namespace used by services e.g. default.svc.cluster.local
    Default: default.svc.cluster.local

  SideCarRouterManagerImage:
    Type: String
    Description: Sidecar router manager that sets up networking for transparent proxy
    Default: "111345817488.dkr.ecr.us-west-2.amazonaws.com/aws-appmesh-proxy-route-manager"

  EnvoyImage:
    Type: String
    Description: Envoy image to use
    Default: "111345817488.dkr.ecr.us-west-2.amazonaws.com/aws-appmesh-envoy:v1.8.0.2-beta"

  EnvoyLogLevel:
    Type: String
    Default: debug

  VoteDatabaseHttpProxyImage:
    Type: String
    Description: Vote App Database HTTP Proxy image
    Default: "subfuzion/vote-database-proxy:1.0.19"

  VoteDatabaseImage:
    Type: String
    Description: Vote App Database image
    Default: "mongo:3.6"

 
  VoteWebImage:
    Type: String
    Description: Vote App Web image
    Default: "subfuzion/vote-web:1.0.19"
  
  CloudWatchAgentImage:
    Type: String
    Description: CloudWatch Agent image
    Default: "subfuzion/vote-cw-agent:1.0.19"

  XRayImageUrl:
    Type: String
    Default: amazon/aws-xray-daemon
    Description: The url of a docker image that contains the X-Ray daemon that will
                 handle the traffic for this service
  PrometheusWebImage:
    Type: String
    Description: Prometheus Web image
    Default: "986516506659.dkr.ecr.us-west-2.amazonaws.com/prometheusrepo:latest"

  StatsExporterWebImage:
    Type: String
    Description: StatsExporter Web image
    Default: "986516506659.dkr.ecr.us-west-2.amazonaws.com/statsexporterrepo:latest"

  GrafanaWebImage:
    Type: String
    Description: Grafana Web image
    Default: "grafana/grafana:latest"

  AppMeshEgressIgnoredIpCsv:
    Type: String
    Default: 169.254.170.2,169.254.169.254

  Path:
    Type: String
    Default: "*"
    Description: A path on the public load balancer that this service
                 should be connected to. Use * to send all load balancer
                 traffic to this service.

Resources:

  ### ==================================
  ### database.voteapp.svc.cluster.local
  ### ==================================
  # DatabaseServiceDiscoveryRecord:
    # Type: 'AWS::ServiceDiscovery::Service'
    # Properties:
      # Name: "database"
      # DnsConfig:
        # NamespaceId:
          # 'Fn::ImportValue': !Sub "${EnvironmentName}:ECSServiceDiscoveryNamespace"
        # DnsRecords:
          # - Type: A
            # TTL: 300
      # HealthCheckCustomConfig:
        # FailureThreshold: 1

  DatabaseService:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster:
        'Fn::ImportValue': !Sub "${EnvironmentName}:ECSCluster"
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      DesiredCount: 1
      LaunchType: EC2
      #ServiceRegistries:
       # - RegistryArn:
        #    'Fn::GetAtt': DatabaseServiceDiscoveryRecord.Arn
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - 'Fn::ImportValue': !Sub "${EnvironmentName}:ECSServiceSecurityGroup"
          Subnets: 
            - 'Fn::ImportValue': !Sub "${EnvironmentName}:PrivateSubnet1"
            - 'Fn::ImportValue': !Sub "${EnvironmentName}:PrivateSubnet2"
      TaskDefinition: { Ref: DatabaseTaskDefinition }

  DatabaseTaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      TaskRoleArn: 
        'Fn::ImportValue': !Sub "${EnvironmentName}:TaskIamRole"
      ContainerDefinitions:
        - Name: mongo
          Image: !Ref 'VoteDatabaseImage'
          LogConfiguration:
            LogDriver: 'awslogs'
            Options:
              awslogs-group:
                'Fn::ImportValue': !Sub "${EnvironmentName}:ECSServiceLogGroup"
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: database
      # ExecutionRoleArn:
        # 'Fn::ImportValue': !Sub "${EnvironmentName}:TaskExecutionIamRoleArn"
      NetworkMode: "awsvpc"
      Memory: 2048  